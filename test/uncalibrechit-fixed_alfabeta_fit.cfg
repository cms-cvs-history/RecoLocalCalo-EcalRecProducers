process testFixedAlphaBetaFitUncalibRecHit = {
  untracked PSet maxEvents = {untracked int32 input = 10}

  include "EventFilter/EcalRawToDigiDev/data/EcalUnpackerMapping.cfi"
  include "EventFilter/EcalRawToDigiDev/data/EcalUnpackerData.cfi"  

  source = PoolSource {
  #untracked uint32 skipEvents = 16000
   untracked vstring fileNames = {'file:/data/franzoni/data/p5-commissioning/laserJason/ecal_local.00034698.0001.A.storageManager.0.0000.dat.root'}
  }

#  unpack binary raw data
#  module ecalEBunpacker = EcalDCCUnpackingModule{ }

#  source = DAQEcalTBInputService{
#            untracked  vstring fileNames = {'file:/home/ghezzi/data/H4-000021348-SM19-LASER-STD'}
#            uint32 runNumber = 72999
#  }

  # use trivial ESProducer for tests
  es_source = EcalTrivialConditionRetriever { }


  module ecalFixedAlphaBetaFitUncalibRecHit = ecalFixedAlphaBetaFitUncalibRecHit from "RecoLocalCalo/EcalRecProducers/data/ecalFixedAlphaBetaFitUncalibRecHit.cfi"

  replace ecalFixedAlphaBetaFitUncalibRecHit.EBdigiCollection = ecalEBunpacker:ebDigis
  replace ecalFixedAlphaBetaFitUncalibRecHit.EEdigiCollection = ecalEBunpacker:eeDigis
#  include "RecoLocalCalo/EcalRecProducers/data/ecalFixedAlphaBetaFitUncalibRecHit.cfi"

  module counter = AsciiOutputModule {
   untracked uint32 verbosity = 1
  }

  module dumpEv = EventContentAnalyzer {}


  module out = PoolOutputModule {
          untracked vstring outputCommands = {
          "drop *" ,
          "keep *_ecalFixedAlphaBetaFitUncalibRecHit_*_*",
          "keep EBDigiCollection_*_*_*"
      }
 
      untracked PSet SelectEvents = {     
         vstring SelectEvents = { "p" }
          }  
      untracked string fileName ="testFixedAlphaBetaFitUncalibRecHit.root"
}


  path p = { ecalEBunpacker, ecalFixedAlphaBetaFitUncalibRecHit}

  endpath ep = { counter, dumpEv, out }

}
