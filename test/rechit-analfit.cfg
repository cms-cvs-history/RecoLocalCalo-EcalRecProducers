process RECO = {
  source = DAQEcalTBInputService{
            untracked   vstring fileNames = { '/u1/rahatlou/data/h4/H4-000018104-SM5-LASER-STD' }
            untracked int32 maxEvents = 5
            uint32 runNumber = 72999
            # next line is needed only for the older ascii raw data files.
            # when running on the latest raw data in binary format comment the following line
            #untracked bool isBinary = false
  }

#  es_source = PoolDBESSource { VPSet toGet = {
#                                {string record = "EcalPedestalsRcd"
#                                 string tag = "EcalPedestals_2008_test"},
#                                {string record = "EcalWeightRecAlgoWeightsRcd"
#                                 string tag = "EcalWeightRecAlgoWeights_h4_sm5"}
#                               }
#                               bool loadAll = true
#                               string connect = "sqlite_file:ecalwgt.db"
#                               string timetype = "runnumber"
#  }
#
  # use trivial ESProducer for tests
  es_source = EcalTrivialConditionRetriever { }

  # unpack raw data from test beam
  module ecalEBunpacker = EcalDCCUnpackingModule{ }

  # dump all digis in each event
  module digidumper = EcalDigiDumperModule { }

  # simple analyzer of digi collections
  module reader = EcalDigiAnalyzer {
   string digiProducer   = "maker"
   string digiCollection = "EBDigiCollection"
  }

  # producer of rechits starting from digis
  module uncalibHitMaker = EcalAnalFitUncalibRecHitProducer {
   string digiProducer   = "ecalEBunpacker"
   string digiCollection = ""
   string hitCollection  = "EcalEBUncalibRecHits"
   untracked int32 nMaxPrintout = 1
  }

  # rechit producer
  module rechitMaker = EcalRecHitProducer {
    string uncalibRecHitProducer   = "uncalibHitMaker"
    string uncalibRecHitCollection = "EcalEBUncalibRecHits"
    string rechitCollection        = "EcalRecHits"
    untracked int32 nMaxPrintout     = 20
  }


  # printout module
  module counter = AsciiOutputModule {
   untracked uint32 verbosity = 1
  }

  path p = { ecalEBunpacker, uncalibHitMaker, rechitMaker  }

  endpath ep = { counter }

}

